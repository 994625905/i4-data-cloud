server.port=9002

spring.application.name=i4-data-cloud-start-gateway

#redis配置，后期升级为读写分离
spring.redis.host=192.168.1.232
spring.redis.timeout=5000
spring.redis.password=
spring.redis.port=6379
spring.redis.database=3
spring.redis.jedis.pool.max-active=10
spring.redis.jedis.pool.max-idle=10
spring.redis.jedis.pool.max-wait=-1
spring.redis.jedis.pool.min-idle=0
spring.redis.lettuce.shutdown-timeout=100ms
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0

#gateway开启服务注册和发现的功能，并且spring cloud gateway自动根据服务发现为每一个服务创建了一个路由（router）
spring.cloud.gateway.discovery.locator.enabled=true
#将请求路径上的服务名配置为小写(服务向注册中心注册时将服务名转成大写的了)
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

eureka.instance.hostname=192.168.1.233
eureka.instance.prefer-ip-address=true
eureka.instance.ip-address=${eureka.instance.hostname}
eureka.instance.instance-id=${eureka.instance.hostname}:${server.port}
#定义服务多久去注册中心续约
eureka.instance.lease-renewal-interval-in-seconds=30
#定义服务多久不去续约认为服务失效
eureka.instance.lease-expiration-duration-in-seconds=90

#注册中心，集群的话就有多个,身份认证
eureka.service.center=192.168.1.233:9001
eureka.service.auth.user=i4cloud
eureka.service.auth.password=ppdappda
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://${eureka.service.auth.user}:${eureka.service.auth.password}@${eureka.service.center}/eureka/

#日志级别
logging.level.org.springframeword:info
logging.level.cn.i4.data.cloud:info

#单个文件最大尺寸(设置100)
spring.servlet.multipart.max-file-size=100MB
#一个请求文件的最大尺寸
spring.servlet.multipart.max-request-size=100MB
#设置一个文件上传的临时文件目录（本地需要创建个目录）
spring.servlet.multipart.location=/opt/temp4/